name: scrape-state-daily-averages

on:
  workflow_dispatch:
  schedule:
    - cron: "32 20 * * *"

permissions:
  contents: write

jobs:
  scrape-state-daily-averages:
    # runs-on: ubuntu-latest
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout codes
      id: checkout-codes
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
        architecture: x64

    - name: Choose Chrome version
      id: choose-chrome-version
      run: |
        CHROME_VERSIONS_URL="https://googlechromelabs.github.io/chrome-for-testing/known-good-versions.json"
        CHROME_VERSIONS=($(curl -s $CHROME_VERSIONS_URL | jq -r '.versions[].version' | awk -F'.' '$1 > 128'))
        CHROME_VERSION_INDEX=$((RANDOM % ${#CHROME_VERSIONS[@]}))
        CHROME_VERSION=${CHROME_VERSIONS[$CHROME_VERSION_INDEX]}
        echo "Using Chrome version: $CHROME_VERSION"
        echo "chrome_version=$CHROME_VERSION" >> $GITHUB_ENV

    - name: Set up Chrome and ChromeDriver
      id: setup-chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: ${{ env.chrome_version }}
        install-dependencies: true
        install-chromedriver: true

    - name: Install dependencies
      id: install-dependencies
      run: |
        pip install -U pip
        pip install -r requirements.txt

    - name: Scrape state daily averages
      id: scrape-state-daily-averages
      run: |
        rm ./data/state-daily-averages/*.csv
        git rm ./data/state-daily-averages/*.csv
        python scrape_state_daily_averages.py

    - name: Check for changes
      id: check-changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        echo "Checking for changes..."
        change_count=$(git status --porcelain | grep -E '^M|^A|^D|^R|^U|^?' | wc -l)
        if [ "$change_count" -gt 0 ]; then
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_ENV
        else
          echo "No changes detected"
          echo "has_changes=false" >> $GITHUB_ENV
        fi

    - name: Commit changes
      id: commit-changes
      if: ${{ env.has_changes == 'true' }}
      run: |
        git add --all --ignore-errors
        git commit --allow-empty -m "chore(data): scrape latest state daily averages"

    - name: Push changes
      id: push-changes
      if: ${{ env.has_changes == 'true' }}
      uses: ad-m/github-push-action@v0.8.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref_name }}
